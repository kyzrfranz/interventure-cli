package main

import (
	"encoding/json"
	"flag"
	"fmt"
	v1 "github.com/kyzrfranz/buntesdach/api/v1"
	"github.com/kyzrfranz/interventure-cli/internal/cmd"
	"github.com/kyzrfranz/interventure-cli/pkg/xls"
	"os"
)

var (
	input  string
	output string
	tfType string
)

func main() {
	flag.StringVar(&input, "in", cmd.EnvOrString("INPUT_FILE", "bio.json"), "path to a json file containing politician bios (generated by 'bio' command)")
	flag.StringVar(&output, "out", cmd.EnvOrString("OUTPUT_FILE", "addresses.xlsx"), "name of the xlsx file to be generated")
	flag.StringVar(&tfType, "type", cmd.EnvOrString("TRANSFORM_TYPE", "xsl"), "can be 'xsl', 'website'")
	flag.Parse()

	data, err := os.ReadFile(input)
	cmd.NoErrorOrExit(err)
	var bios []v1.Politician
	err = json.Unmarshal(data, &bios)
	cmd.NoErrorOrExit(err)

	if tfType == "xsl" {
		err = makeXLS(bios)
	} else if tfType == "website" {
		err = makeWebsiteData(bios)
	}
	cmd.NoErrorOrExit(err)

	fmt.Printf("Successfully generated %s\n", output)
}

func makeXLS(bios []v1.Politician) error {
	xlsGenerator := xls.NewGenerator()
	return xlsGenerator.Generate(output, bios)
}

func makeWebsiteData(bios []v1.Politician) error {

	return nil
}
